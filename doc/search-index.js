var N = null;var searchIndex = {};
searchIndex["fire"]={"doc":"Implementation of the Fast-Inertial-Relaxation-Engine…","items":[[3,"FIRE","fire","The Fast-Inertial-Relaxation-Engine (FIRE) algorithm",N,N],[12,"max_step","","The maximum size for an optimization step. According to…",0,N],[12,"f_alpha","","Factor used to decrease alpha-parameter if downhill",0,N],[12,"alpha_start","","Initial alpha-parameter.",0,N],[12,"f_inc","","Factor used to increase time-step if downhill",0,N],[12,"f_dec","","Factor used to decrease time-step if uphill",0,N],[12,"n_min","","Minimum number of iterations (\"latency\" time) performed…",0,N],[3,"Progress","","Important iteration data in minimization, useful for…",N,N],[12,"step","","The line-search step used for this iteration.",1,N],[3,"UserTermination","","For user defined termination criteria",N,N],[12,"0","","",2,N],[3,"CachedProblem","","Represents an optimization problem with cache for avoiding…",N,N],[5,"fire","","Create FIRE optimization interface",N,[[],["fire"]]],[5,"monitor","","Create user defined monitor or termination criteria with a…",N,[[["g"]],["option",["usertermination"]]]],[0,"line","","Line search, also called one-dimensional search, refers to…",N,N],[3,"LineSearch","fire::line","",N,N],[4,"LineSearchAlgorithm","","Line search algorithms.",N,N],[13,"MoreThuente","","MoreThuente method proposd by More and Thuente. This is…",3,N],[13,"BackTrackingArmijo","","BackTracking method with the Armijo condition.",3,N],[13,"BackTrackingStrongWolfe","","BackTracking method with strong Wolfe condition.",3,N],[13,"BackTrackingWolfe","","BackTracking method with regular Wolfe condition.",3,N],[4,"LineSearchCondition","","",N,N],[13,"Armijo","","The sufficient decrease condition.",4,N],[13,"Wolfe","","",4,N],[13,"StrongWolfe","","",4,N],[5,"linesearch","","A unified interface to line search methods.",N,[[],["linesearch"]]],[8,"LineSearchFind","","",N,N],[10,"find","","Given initial step size and phi function, returns an…",5,[[["self"],["f64"],["e"]],["result",["usize","error"]]]],[11,"with_max_iterations","","Set max number of iterations in line search. The default…",6,[[["self"],["usize"]],["self"]]],[11,"with_initial_step","","Set initial step size when performing line search. The…",6,[[["self"],["f64"]],["self"]]],[11,"with_algorithm","","Set line search algorithm. The default is MoreThuente…",6,[[["self"],["str"]],["self"]]],[11,"find","","Perform line search with a callback function `phi` to…",6,[[["self"],["e"]],["result",["usize","error"]]]],[0,"lj","fire","",N,N],[3,"LennardJones","fire::lj","",N,N],[12,"epsilon","","Energy constant of the Lennard-Jones potential",7,N],[12,"sigma","","Distance constant of the Lennard-Jones potential",7,N],[11,"evaluate","","Evaluate energy and forces",7,N],[11,"with_max_step","fire","Set the maximum size for an optimization step.",0,[[["self"],["f64"]],["self"]]],[11,"with_md_scheme","","Set MD scheme for position and velocity update",0,[[["self"],["str"]],["self"]]],[11,"with_max_cycles","","Set the maximum cycles for termination.",0,[[["self"],["usize"]],["self"]]],[11,"with_max_gradient_norm","","Set the maximum gradient/force norm for termination.",0,[[["self"],["f64"]],["self"]]],[11,"with_line_search","","Enable line search of optimal step size.",0,[[["self"]],["self"]]],[8,"TerminationCriteria","","Define termination conditions",N,N],[10,"met","","",8,[[["self"],["progress"]],["bool"]]],[8,"GradientBasedMinimizer","","Common interfaces for structure relaxation",N,N],[11,"minimize","","",9,N],[10,"minimize_alt","","",9,N],[11,"gradient","","Return a reference to gradient vector.",1,N],[11,"value","","Return current function value.",1,[[["self"]],["f64"]]],[11,"ncalls","","Return the number of function calls",1,[[["self"]],["usize"]]],[11,"displacement","","Return a reference to displacement vector.",1,N],[11,"report","","Print a summary about progress.",1,[[["self"]]]],[11,"new","","Construct a CachedProblem",10,N],[11,"ncalls","","The number of function calls",10,[[["self"]],["usize"]]],[11,"take_line_step","","Update position `x` at a prescribed displacement and step…",10,N],[11,"value","","Return function value at current position.",10,[[["self"]],["f64"]]],[11,"value_prev","","Return function value at previous point",10,[[["self"]],["f64"]]],[11,"gradient_prev","","",10,N],[11,"gradient","","Return a reference to gradient at current position.",10,N],[11,"position","","Return a reference to current position vector.",10,N],[11,"set_position","","Update position from `p`",10,N],[11,"revert","","Revert to previous point",10,[[["self"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","fire::line","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","fire::lj","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"met","fire","",2,[[["self"],["progress"]],["bool"]]],[11,"minimize_alt","","minimize with user defined termination criteria / monitor",0,N],[11,"clone","fire::line","",3,[[["self"]],["linesearchalgorithm"]]],[11,"clone","","",4,[[["self"]],["linesearchcondition"]]],[11,"clone","fire::lj","",7,[[["self"]],["lennardjones"]]],[11,"clone","fire","",0,[[["self"]],["fire"]]],[11,"clone","","",1,[[["self"]],["progress"]]],[11,"clone","","",2,[[["self"]],["usertermination"]]],[11,"clone","","",10,[[["self"]],["cachedproblem"]]],[11,"eq","fire::line","",3,[[["self"],["linesearchalgorithm"]],["bool"]]],[11,"eq","","",4,[[["self"],["linesearchcondition"]],["bool"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","The default algorithm (MoreThuente method).",3,[[],["self"]]],[11,"default","fire::lj","",7,[[],["self"]]],[11,"default","fire","",0,[[],["self"]]],[11,"fmt","fire::line","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","fire::lj","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","fire","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"FIRE"],[3,"Progress"],[3,"UserTermination"],[4,"LineSearchAlgorithm"],[4,"LineSearchCondition"],[8,"LineSearchFind"],[3,"LineSearch"],[3,"LennardJones"],[8,"TerminationCriteria"],[8,"GradientBasedMinimizer"],[3,"CachedProblem"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
